     1                                  global sum                             ; Makes function callable from other linked files.
     2                                  
     3                                  section .data
     4                                  
     5                                  section .bss
     6                                  
     7                                  section .text
     8                                  
     9                                  sum:
    10                                  ;=====================================================================================================
    11                                  
    12                                  ; Back up all registers to stack and set stack pointer to base pointer
    13 00000000 55                      push rbp
    14 00000001 4889E5                  mov rbp, rsp
    15 00000004 57                      push rdi
    16 00000005 56                      push rsi
    17 00000006 52                      push rdx
    18 00000007 51                      push rcx
    19 00000008 4150                    push r8
    20 0000000A 4151                    push r9
    21 0000000C 4152                    push r10
    22 0000000E 4153                    push r11
    23 00000010 4154                    push r12
    24 00000012 4155                    push r13
    25 00000014 4156                    push r14
    26 00000016 4157                    push r15
    27 00000018 53                      push rbx
    28 00000019 9C                      pushf
    29                                  
    30 0000001A 6AFF                    push qword -1                           ; Extra push onto stack to make even # of pushes.
    31                                  
    32 0000001C 4989FF                  mov r15, rdi                            ; Copies array that was passed to r15.
    33 0000001F 4989F6                  mov r14, rsi                            ; Copies number of elements in the array to r14.
    34 00000022 41BD00000000            mov r13, 0                              ; Sum register to add elements of array to.
    35 00000028 41BC00000000            mov r12, 0                              ; Counter to to iterate through array.
    36                                  
    37                                  ;=========================================== Start of Loop ==========================================
    38                                  begin_loop:
    39                                  
    40                                  ; Compares the counter (r12) to the number of elements in the array (r14).
    41 0000002E 4D39F4                  cmp r12, r14
    42 00000031 7D09                    jge outofloop
    43                                  
    44                                  ;======================================= Copy into array ===========================================
    45                                  ; Adds element of array at index of r12 to the Sum of register r13.
    46 00000033 4F032CE7                add r13, [r15 + 8 * r12]
    47 00000037 49FFC4                  inc r12                                 ; Increments counter r12 by 1.
    48                                  
    49                                  ; Restarts loop
    50 0000003A EBF2                    jmp begin_loop
    51                                  
    52                                  ;======================================= End of loop =================================================
    53                                  outofloop:
    54                                  
    55                                  ; Restores all backed up registers to their original state.
    56 0000003C 58                      pop rax                                ; Remove extra push of -1 from stack.
    57 0000003D 4C89E8                  mov qword rax, r13                     ; Copies sum (r13) to rax.
    58 00000040 9D                      popf
    59 00000041 5B                      pop rbx
    60 00000042 415F                    pop r15
    61 00000044 415E                    pop r14
    62 00000046 415D                    pop r13
    63 00000048 415C                    pop r12
    64 0000004A 415B                    pop r11
    65 0000004C 415A                    pop r10
    66 0000004E 4159                    pop r9
    67 00000050 4158                    pop r8
    68 00000052 59                      pop rcx
    69 00000053 5A                      pop rdx
    70 00000054 5E                      pop rsi
    71 00000055 5F                      pop rdi
    72 00000056 5D                      pop rbp
    73                                  
    74 00000057 C3                      ret
